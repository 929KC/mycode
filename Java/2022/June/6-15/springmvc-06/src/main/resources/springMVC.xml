<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--扫描组件-->
    <context:component-scan base-package="com.bit.mvc"></context:component-scan>

    <!-- 配置Thymeleaf视图解析器 -->
    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="order" value="1"/>
        <property name="characterEncoding" value="UTF-8"/>
        <property name="templateEngine">
            <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
                <property name="templateResolver">
                    <bean class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
                        <!-- 视图前缀 -->
                        <property name="prefix" value="/WEB-INF/templates/"/>
                        <!-- 视图后缀 -->
                        <property name="suffix" value=".html"/>
                        <property name="templateMode" value="HTML5"/>
                        <property name="characterEncoding" value="UTF-8"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>
    <!--必须通过文件解析器的解析才能将文件转换为MultipartFile对象-->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    </bean>
    <bean id="firstInterceptor"/>
    <!--
    path：设置处理的请求地址
    view-name：设置请求地址所对应的视图名称
    -->
    <!--注解驱动的标签-->
    <mvc:view-controller path="/file" view-name="file"></mvc:view-controller>
    <mvc:annotation-driven />
    <!--开放对静态资源的访问    -->
    <mvc:default-servlet-handler></mvc:default-servlet-handler>

<!--    <bean class="com.bit.mvc.interceptor.FirstInterceptor"></bean>-->
<!--    <ref bean="firstInterceptor"></ref>-->
    <!-- 以上两种配置方式都是对DispatcherServlet所处理的所有的请求进行拦截 -->
<!--   <mvc:interceptors><mvc:interceptor>-->
<!--       <mvc:mapping path="/**"/>-->
<!--       <mvc:exclude-mapping path="/testRequestEntity"/>-->
<!--       <ref bean="firstInterceptor"></ref>-->
<!--   </mvc:interceptor></mvc:interceptors>-->

    <!--
    以上配置方式可以通过ref或bean标签设置拦截器，通过mvc:mapping设置需要拦截的请求，通过
    mvc:exclude-mapping设置需要排除的请求，即不需要拦截的请求
    -->
    <mvc:interceptors>
        <bean class="com.bit.mvc.interceptor.FirstInterceptor"></bean>
    </mvc:interceptors>
</beans>